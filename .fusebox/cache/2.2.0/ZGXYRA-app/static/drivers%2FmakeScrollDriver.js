module.exports = { contents: "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rxjs_1 = require(\"rxjs\");\nfunction makeScrollDriver({ element, duration }) {\n    return function ScrollDriver(offsetTop$) {\n        const source = new rxjs_1.Subject();\n        const scrollTo = ({ element, to, duration = 0 }) => {\n            if (duration <= 0)\n                return;\n            const difference = to - element.scrollTop;\n            const perTick = difference / duration * 10;\n            setTimeout(() => {\n                element.scrollTop = element.scrollTop + perTick;\n                if (element.scrollTop === to)\n                    return;\n                scrollTo({ element, to, duration: duration - 10 });\n            });\n        };\n        window.addEventListener('scroll', () => {\n            source.next(`${window.scrollY} px`);\n        });\n        rxjs_1.Observable.from(offsetTop$)\n            .subscribe((offsetTop) => scrollTo({ element, to: offsetTop, duration }));\n        return source;\n    };\n}\nexports.makeScrollDriver = makeScrollDriver;\n//# sourceMappingURL=makeScrollDriver.js.map",
dependencies: ["rxjs"],
sourceMap: "{\"version\":3,\"file\":\"drivers/makeScrollDriver.js\",\"sourceRoot\":\"\",\"sources\":[\"drivers/makeScrollDriver.ts\"],\"names\":[],\"mappings\":\";;AAAA,+BAAyC;AAGzC,0BAAiC,EAAC,OAAO,EAAE,QAAQ,EAA2C;IAC1F,MAAM,CAAC,sBAAsB,UAA0B;QACnD,MAAM,MAAM,GAAG,IAAI,cAAO,EAAE,CAAC;QAE7B,MAAM,QAAQ,GAAG,CAAC,EAAC,OAAO,EAAE,EAAE,EAAE,QAAQ,GAAG,CAAC,EAAuD;YAC/F,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC;gBAAC,MAAM,CAAC;YAC1B,MAAM,UAAU,GAAG,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC;YAC1C,MAAM,OAAO,GAAG,UAAU,GAAG,QAAQ,GAAG,EAAE,CAAC;YAC3C,UAAU,CAAC;gBACP,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC;gBAChD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE,CAAC;oBAAC,MAAM,CAAC;gBACrC,QAAQ,CAAC,EAAC,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,GAAG,EAAE,EAAC,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,KAAK,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,iBAAU,CAAC,IAAI,CAAC,UAAU,CAAC;aACtB,SAAS,CACN,CAAC,SAAiB,KAAK,QAAQ,CAAC,EAAC,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAC,CAAC,CACtE,CAAC;QACN,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC,CAAA;AACL,CAAC;AAzBD,4CAyBC\",\"sourcesContent\":[\"import {Subject, Observable} from 'rxjs';\\nimport {Stream} from 'xstream';\\n\\nexport function makeScrollDriver({element, duration}: {element: HTMLElement, duration: number}) {\\n    return function ScrollDriver(offsetTop$: Stream<number>): Subject<string> {\\n        const source = new Subject();\\n\\n        const scrollTo = ({element, to, duration = 0}: {element: HTMLElement, to: number, duration: number}) => {\\n            if (duration <= 0) return;\\n            const difference = to - element.scrollTop;\\n            const perTick = difference / duration * 10;\\n            setTimeout(() => {\\n                element.scrollTop = element.scrollTop + perTick;\\n                if (element.scrollTop === to) return;\\n                scrollTo({element, to, duration: duration - 10});\\n            });\\n        };\\n\\n        window.addEventListener('scroll', () => {\\n            source.next(`${window.scrollY} px`);\\n        });\\n\\n        Observable.from(offsetTop$)\\n            .subscribe(\\n                (offsetTop: number) => scrollTo({element, to: offsetTop, duration})\\n            );\\n        return source;\\n    }\\n}\\n\"]}",
headerContent: undefined,
mtime: 1500121752000,
devLibsRequired : undefined
};