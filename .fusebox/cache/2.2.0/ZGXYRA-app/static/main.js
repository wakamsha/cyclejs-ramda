module.exports = { contents: "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rxjs_1 = require(\"rxjs\");\nconst ramda_1 = require(\"ramda\");\nconst rxjs_run_1 = require(\"@cycle/rxjs-run\");\nconst dom_1 = require(\"@cycle/dom\");\nconst makeScrollDriver_1 = require(\"./drivers/makeScrollDriver\");\nfunction main({ DOM, Scroll }) {\n    const inputName$ = DOM.select('.field').events('input');\n    const inputScroll$ = DOM.select('.scrollable__input').events('input');\n    const initialPageState = {\n        name: '',\n        offsetTop: 0\n    };\n    const pageState$ = rxjs_1.Observable.merge(inputName$.map((ev) => ramda_1.assoc('name', ev.ownerTarget.value)), inputScroll$.map((ev) => ramda_1.assoc('scroll', Number(ev.ownerTarget.value)))).scan((acc, action) => action(acc), initialPageState).startWith(initialPageState);\n    const dom$ = rxjs_1.Observable.combineLatest(pageState$, Scroll.startWith('0px'), (pageState, scroll) => {\n        return dom_1.div('.container', [\n            dom_1.div('.row', [\n                dom_1.div('.col-sm-8', [\n                    dom_1.div('.well', [\n                        dom_1.input('.field.form-control', { props: {\n                                placeholder: '君の名は… !?',\n                                value: pageState.name\n                            } }),\n                        dom_1.hr(),\n                        dom_1.h1(`お前は… ${pageState.name} ${pageState.name && 'だ！'}`)\n                    ])\n                ])\n            ]),\n            dom_1.input('.scrollable__input.form-control', {\n                props: {\n                    type: 'number',\n                    value: pageState.offsetTop\n                }\n            }),\n            dom_1.p('.scrollable__counter', scroll),\n            dom_1.div('.scroll-content')\n        ]);\n    });\n    return {\n        DOM: dom$,\n        Scroll: inputScroll$.map((ev) => Number(ev.ownerTarget.value))\n    };\n}\nconst drivers = {\n    DOM: dom_1.makeDOMDriver('#app'),\n    Scroll: makeScrollDriver_1.makeScrollDriver({ element: document.body, duration: 600 })\n};\nrxjs_run_1.run(main, drivers);\n//# sourceMappingURL=main.js.map",
dependencies: ["rxjs","ramda","@cycle/rxjs-run","@cycle/dom","./drivers/makeScrollDriver"],
sourceMap: "{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"main.ts\"],\"names\":[],\"mappings\":\";;AAAA,+BAAgC;AAChC,iCAA4B;AAC5B,8CAAoC;AAEpC,oCAAsF;AACtF,iEAA4D;AAgB5D,cAAc,EAAC,GAAG,EAAE,MAAM,EAAQ;IAE9B,MAAM,UAAU,GAA8B,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACnF,MAAM,YAAY,GAA8B,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAEjG,MAAM,gBAAgB,GAAc;QAChC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,CAAC;KACf,CAAC;IAEF,MAAM,UAAU,GAAG,iBAAU,CAAC,KAAK,CAC/B,UAAU,CAAC,GAAG,CAAC,CAAC,EAAiB,KAAK,aAAK,CAAC,MAAM,EAAG,EAAE,CAAC,WAAgC,CAAC,KAAK,CAAC,CAAC,EAChG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAiB,KAAK,aAAK,CAAC,QAAQ,EAAE,MAAM,CAAE,EAAE,CAAC,WAAgC,CAAC,KAAK,CAAC,CAAC,CAAC,CAC/G,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,MAAM,KAAK,MAAM,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;IAEnF,MAAM,IAAI,GAAG,iBAAU,CAAC,aAAa,CACjC,UAAU,EACV,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EACvB,CAAC,SAAS,EAAE,MAAM;QACd,MAAM,CAAC,SAAG,CAAC,YAAY,EAAE;YACrB,SAAG,CAAC,MAAM,EAAE;gBACR,SAAG,CAAC,WAAW,EAAE;oBACb,SAAG,CAAC,OAAO,EAAE;wBACT,WAAK,CAAC,qBAAqB,EAAE,EAAC,KAAK,EAAE;gCACjC,WAAW,EAAE,UAAU;gCACvB,KAAK,EAAE,SAAS,CAAC,IAAI;6BACxB,EAAC,CAAC;wBACH,QAAE,EAAE;wBACJ,QAAE,CAAC,QAAQ,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC;qBACzD,CAAC;iBACL,CAAC;aACL,CAAC;YACF,WAAK,CAAC,iCAAiC,EAAE;gBACrC,KAAK,EAAE;oBACH,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,SAAS,CAAC,SAAS;iBAC7B;aACJ,CAAC;YACF,OAAC,CAAC,sBAAsB,EAAE,MAAM,CAAC;YACjC,SAAG,CAAC,iBAAiB,CAAC;SACzB,CAAC,CAAC;IACP,CAAC,CACJ,CAAC;IAEF,MAAM,CAAQ;QACV,GAAG,EAAE,IAAI;QACT,MAAM,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAiB,KAAK,MAAM,CAAE,EAAE,CAAC,WAAgC,CAAC,KAAK,CAAC,CAAC;KACtG,CAAC;AACN,CAAC;AAED,MAAM,OAAO,GAAG;IACZ,GAAG,EAAE,mBAAa,CAAC,MAAM,CAAC;IAC1B,MAAM,EAAE,mCAAgB,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;CACtE,CAAC;AAEF,cAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC\",\"sourcesContent\":[\"import {Observable} from 'rxjs';\\nimport {assoc} from 'ramda';\\nimport {run} from '@cycle/rxjs-run';\\nimport {DOMSource} from '@cycle/dom/rxjs-typings';\\nimport {div, input, hr, h1, p, VNode, makeDOMDriver, CycleDOMEvent} from '@cycle/dom';\\nimport {makeScrollDriver} from './drivers/makeScrollDriver';\\n\\ntype SoAll = {\\n    DOM: DOMSource;\\n}\\n\\ntype SiAll = {\\n    DOM: Observable<VNode>;\\n    Scroll: Observable<string>;\\n}\\n\\ntype PageState = {\\n    name: string;\\n    offsetTop: number;\\n}\\n\\nfunction main({DOM, Scroll}: SoAll): SiAll {\\n\\n    const inputName$: Observable<CycleDOMEvent> = DOM.select('.field').events('input');\\n    const inputScroll$: Observable<CycleDOMEvent> = DOM.select('.scrollable__input').events('input');\\n\\n    const initialPageState: PageState = {\\n        name: '',\\n        offsetTop: 0\\n    };\\n\\n    const pageState$ = Observable.merge(\\n        inputName$.map((ev: CycleDOMEvent) => assoc('name', (ev.ownerTarget as HTMLInputElement).value)),\\n        inputScroll$.map((ev: CycleDOMEvent) => assoc('scroll', Number((ev.ownerTarget as HTMLInputElement).value)))\\n    ).scan((acc, action) => action(acc), initialPageState).startWith(initialPageState);\\n\\n    const dom$ = Observable.combineLatest(\\n        pageState$,\\n        Scroll.startWith('0px'),\\n        (pageState, scroll) => {\\n            return div('.container', [\\n                div('.row', [\\n                    div('.col-sm-8', [\\n                        div('.well', [\\n                            input('.field.form-control', {props: {\\n                                placeholder: '君の名は… !?',\\n                                value: pageState.name\\n                            }}),\\n                            hr(),\\n                            h1(`お前は… ${pageState.name} ${pageState.name && 'だ！'}`)\\n                        ])\\n                    ])\\n                ]),\\n                input('.scrollable__input.form-control', {\\n                    props: {\\n                        type: 'number',\\n                        value: pageState.offsetTop\\n                    }\\n                }),\\n                p('.scrollable__counter', scroll),\\n                div('.scroll-content')\\n            ]);\\n        }\\n    );\\n\\n    return <SiAll>{\\n        DOM: dom$,\\n        Scroll: inputScroll$.map((ev: CycleDOMEvent) => Number((ev.ownerTarget as HTMLInputElement).value))\\n    };\\n}\\n\\nconst drivers = {\\n    DOM: makeDOMDriver('#app'),\\n    Scroll: makeScrollDriver({ element: document.body, duration: 600 })\\n};\\n\\nrun(main, drivers);\\n\"]}",
headerContent: undefined,
mtime: 1500121318000,
devLibsRequired : undefined
};